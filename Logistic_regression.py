# Logistic Regression Sklearn Model for Sarcasm Detection

# Import Libararies

import csv
import numpy as np
from sklearn import linear_model
from sklearn.model_selection import KFold
from sklearn.metrics import accuracy_score
import os

# Variable Initialization

accuracy = []
label = []
features = []

FEATURE_LIST_CSV_FILE_PATH = os.curdir + "\\data\\feature_list.csv"

# Read the feature list generated by feature_extract.py

with open(FEATURE_LIST_CSV_FILE_PATH, 'r') as feature_list:
    nsreader = csv.reader(feature_list, delimiter = ',')
    for i, line in enumerate(nsreader):
        if(i!=0):
            features.append(line[2:])
            label.append(line[1])

# Convert the feature list and label list to integer Numpy array

features = np.asarray(features, dtype='float')
label = np.asarray(label, dtype='int')

# Split the data for 10-fold cross validation

k = KFold(n_splits = 10, shuffle = True)

# Using Sklearn Logistic Regression Model for classification of Sarcastic and Non-Sarcastic Tweets

for train_idx, test_idx in k.split(features):
    
    # Splitting Traing and Testing Set
    
    features_train, features_test = features[train_idx], features[test_idx]
    label_train, label_test = label[train_idx], label[test_idx]
    
    # Creating Logistic Regression Object
    
    logreg = linear_model.LogisticRegression(C=1e5)
    
    # Training the model and calculating weights
    
    logreg.fit(features_train, label_train)    
    
    # Applying the model to the Testing Set
    
    predict = logreg.predict(features_test)
    
    # Calculate the Accuracy of each fold and append to a list
    
    accuracy.append(accuracy_score(predict, label_test))

    print(accuracy)

# Calculate the overall Accuracy of the Model

print(float(sum(accuracy)/len(accuracy)))
